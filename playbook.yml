##
# Ansible playbook for setting up a LAMP development server on Ubuntu 12.04.
#

---
- hosts: all
  user: vagrant

  vars_files:
    - provision/settings.yml

  tasks:

    - name: "General - Update aptitude cache"
      apt: update_cache=yes cache_valid_time=3600

    ##
    # Apt package installation of required software.
    #
    - name: "General - Install required packages via aptitude"
      action: apt pkg={{ item }} state=installed
      tags: common
      with_items:
        - build-essential
        - autoconf
        - checkinstall
        - libx11-dev
        - libxext-dev
        - zlib1g-dev
        - libpng12-dev
        - libjpeg-dev
        - libfreetype6-dev
        - libxml2-dev
        - libcurl4-gnutls-dev
        - librsvg2-bin
        - libssl-dev
        - nano
        - apache2
        - apache2-dev
        - mysql-server
        - mysql-client
        - php5
        - php5-mysql
        - php-apc
        - php5-xmlrpc
        - php-soap
        - php5-gd
        - sendmail
        - unzip
        - python-mysqldb
        - curl
        - redis-server
        - rubygems

    ##
    # Copy PHP email script.
    #
    - name: "PHP | Create email dir"
      action: file path=/home/vagrant/mail state=directory

    - name: "PHP | Copy email script"
      action: template src=provision/sendmail.php dest=/home/vagrant/mail/sendmail.php

    - name: PHP | Install PHP PEAR
      action: apt pkg=php-pear state=installed
      tags: pear

    - name: PHP | Update PEAR
      action: command pear upgrade-all
      tags: pear

    ##
    # MySQL database setup, this does the equivalent of mysql_secure_installation.
    #
    - name: "MySQL - Copy my.cnf from template"
      action: template src=provision/my.cnf dest=/etc/mysql/my.cnf
      tags: common

    - name: "MySQL - Set the root password."
      action: mysql_user user=root password={{ mysql_root_password }} host=localhost
      tags: common

    - name: "MySQL - Config for easy access as root user"
      action: template src=provision/root-my.cnf dest=/root/.my.cnf
      tags: common

    - name: "MySQL - Delete anonymous MySQL server user for {{ server_hostname }}"
      action: mysql_user user="" host="{{ server_hostname }}" state="absent"
      tags: common

    - name: "MySQL - Delete anonymous MySQL server user for localhost"
      action: mysql_user user="" state="absent"
      tags: common

    - name: "MySQL - Secure the MySQL root user for IPV6 localhost (::1)"
      action: mysql_user user="root" password="{{ mysql_root_password }}" host="::1"
      tags: common

    - name: "MySQL - Secure the MySQL root user for IPV4 localhost (127.0.0.1)"
      action: mysql_user user="root" password="{{ mysql_root_password }}" host="127.0.0.1"
      tags: common

    - name: "MySQL - Secure the MySQL root user for localhost domain (localhost)"
      action: mysql_user user="root" password="{{ mysql_root_password }}" host="localhost"
      tags: common

    - name: "MySQL - Secure the MySQL root user for {{ server_hostname }} domain"
      action: mysql_user user="root" password="{{ mysql_root_password }}" host="{{ server_hostname }}"
      tags: common

    - name: "MySQL - Remove the MySQL test database"
      action: mysql_db db=test state=absent
      tags: common

    ##
    # Drush install.
    #
    - name: Drush | Setup PEAR channel
      action: command pear channel-discover pear.drush.org creates=/usr/share/php/.channels/pear.drush.org.reg
      tags: drush

    - name: Drush | Install drush
      action: command pear install drush/drush creates=/usr/bin/drush
      tags: drush

    - name: Drush | Run drush once so it downloads it's dependencies
      action: command drush
      tags: drush

    ##
    # CSS compiling tools.
    #
    - name: CSS | Install SASS
      action: command gem install sass creates=/usr/local/bin/sass
      tags: css

    - name: CSS | Install Susy (no more --pre required as it is 1.0 now)
      action: command gem install susy
      tags: css

    - name: CSS | Install Compass
      action: command gem install compass creates=/usr/local/bin/compass
      tags: css

    - name: CSS | Install Aurora (which will install breakpoint, sass-buttons, respond-to)
      action: command gem install compass-aurora
      tags: css

    ##
    # Apache2 setup.
    #
    - name: "Apache - Enable required modules"
      action: command a2enmod rewrite vhost_alias
      tags: common

    - name: "Apache - Disable the default site"
      action: command a2dissite default
      tags: common

    - name: "Apache - Copy vhost file"
      action: template src=provision/vhost dest=/etc/apache2/sites-available/vhost
      tags: common

    - name: "Apache - Enable new vhost"
      action: command a2ensite vhost
      tags: common

    ##
    # Restart services
    #
    - name: "Restart Apache"
      action: service name=apache2 state=restarted
      tags: common

    - name: "Restart MySQL"
      action: service name=mysql state=restarted
      tags: common
